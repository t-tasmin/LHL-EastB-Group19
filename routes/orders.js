const express = require('express');
const router  = express.Router();

module.exports = (db) => {
  router.post("/", (req, res) => {

    const order = req.body;
    if (order.telephone.length !== 10) {
        const templateVars = {
            script: 'Oops! Please resubmit your order and enter a valid phone number at checkout to finalise. We await you. Thank you!'
        }
        res.render('index', templateVars)
    } else {
        let phone = order.telephone;
        let cname = order.cname
        let orderf = JSON.parse(order.order);
        // console.log(orderf); //==================x

        let clientText = '';
        let restaurantText = '';

        let order_items_ids = [];
        let order_items_names = [];

        let order_items_info = [];

        for (let j of orderf) {
          let qstring0 =`SELECT * FROM menu_dishes WHERE name = $1 ;`;
          
          db.query(qstring0, [j.itemName])
            .then((data) => {
              order_items_info.push(data.rows[0]);
            })
            .catch(err => {
              console.log(err.message);
              res.status(500);              
            });
        }

        setTimeout(() => {
          let gttl = 0;
          let ttl_prep_time = 0;

          for (let i = 0; i < orderf.length; i++ ) {
             let ph = [];
             gttl += orderf[i].totalPrice;
             ttl_prep_time += order_items_info[i].prep_time;
             ph.push(order_items_info[i].id);
             ph.push(orderf[i].numberOfItem);
             ph.push(order_items_info[i].unit_price);
             order_items_ids.push(ph)
             ph = [];
             order_items_names.push(order_items_info[i].name);
          }

          // console.log('these items =====> ',order_items_ids); //============================x
          // console.log('these order =====> ',order_items_names);

          let qstring1 = `INSERT INTO orders (
            menu_items, 
            item_names,
            customer_name ,
            customer_phone ,
            total_paid ,
            start_time ,
            end_time
          )
          VALUES
          ($1 , $2 , $3, $4 , $5, $6, $7) RETURNING *;`;
          let templateVars1 = [`${order_items_ids}`, `${order_items_names}`, cname, phone, gttl, new Date(Date.now()), new Date(Date.now() + (ttl_prep_time*60000))];
          db.query(qstring1, templateVars1)
            .then((data) => {
              console.log(data.rows); //=================================================x
              let qstring2 = `INSERT INTO queue (
                customer_phone,
                customer_name,
                customer_order,
                est_pickup_time
              )
              VALUES ($1, $2, $3, $4) RETURNING *;`;
              let templateVars2 = [phone, cname, `${data.rows}`, new Date(Date.now() + (ttl_prep_time*60000))];
              db.query(qstring2, templateVars2)
                .then((data) => {
                  console.log(data.rows); //`~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~++
                })
                .catch(err => {
                  console.log(err.message);
                  res.status(500);              
                });
            })
            .catch(err => {
              console.log(err.message);
              res.status(500);              
            });
          

        }, 500);


    }
    
  const templateVars = {
    script: 'Thank you for your order! Check your SMS for estimated time to pickup.'
  }
  res.render('index', templateVars)
   
  });
  return router;
};

// const queryString = `
    // SELECT * 
    // FROM menu_dishes;
    // `;
  
    // db.query(queryString)
    //   .then(data => {
    //     const menus = data.rows;
    //     const menuVar= {menus};
    //     res.render("menus_show", menuVar);
    //   })
    //   .catch(err => {
    //     res
    //       .status(500)
    //       .json({ error: err.message });
    //   });

/*
let qstring1 = `INSERT INTO orders (
            menu_items,   -- ARRAY OF ARRAYS [[1,2,3],[2,3,4]] -> [[item_id, qnty, unit_price]]
            item_names,
            customer_name ,
            customer_phone ,
            total_paid ,
            start_time ,
            end_time
          )
          VALUES
          ('$1-js-a' , '$2-js-a' , $3, $4 , '$5-js-a', '$6-js-a','$7-js-a'); -- -js-a = js automated, meaning the value that goes there will be generated by js from the client input form plus... RETURNING *`
*/